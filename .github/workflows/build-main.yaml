name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_NAME: tanzilakhalfan

jobs:
  DockerBuildAndPush:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract repository name
      id: vars
      run: echo "REPO_NAME=$(echo ${{ github.repository }} | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest requests
        wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/local/bin/yq
        chmod +x /usr/local/bin/yq

    - name: Lint code
      run: |
        flake8 .

    - name: Run tests
      run: |
        python -m unittest discover -s app/unit-tests -p "test_*.py"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PAT }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v6.9.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.REGISTRY_NAME }}/${{ env.REPO_NAME }}:${{ github.run_number }}

  PackageHelmChart:
    needs: DockerBuildAndPush
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Extract repository name
        id: vars
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: Check yq version
        run: yq --version

      - name: Update Helm values.yaml
        run: |
          IMAGE_REPOSITORY="${REGISTRY_NAME}/${REPO_NAME}"
          IMAGE_TAG="${GITHUB_RUN_NUMBER}"

          yq eval ".image.repository = \"${IMAGE_REPOSITORY}\"" -i charts/${{ env.REPO_NAME }}/values.yaml
          yq eval ".image.tag = \"${IMAGE_TAG}\"" -i charts/${{ env.REPO_NAME }}/values.yaml

          yq eval ".name = \"${REPO_NAME}\"" -i charts/${{ env.REPO_NAME }}/Chart.yaml
          yq eval ".version = \"${IMAGE_TAG}\"" -i charts/${{ env.REPO_NAME }}/Chart.yaml
          yq eval ".appVersion = \"${IMAGE_TAG}\"" -i charts/${{ env.REPO_NAME }}/Chart.yaml
        shell: bash
        env:
          REGISTRY_NAME: ${{ env.REGISTRY_NAME }}
          REPO_NAME: ${{ env.REPO_NAME }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
      
      - name: List updated values.yaml
        run: |
          cat charts/${{ env.REPO_NAME }}/values.yaml
      
      - name: List updated Chart.yaml
        run: |
          cat charts/${{ env.REPO_NAME }}/Chart.yaml
          
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GIT_HUB_TOKEN }}"
      
      - name: Validate Helm Chart
        run: |
          helm lint charts/${{ env.REPO_NAME }}
      
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GIT_HUB_TOKEN }}"
      
  DeployToDev:
    needs: PackageHelmChart
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      # Extract the repository name from the GitHub repository
      - name: Extract repository name
        id: vars
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Set up AKS
      - name: Set up AKS
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      # Install Helm
      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GIT_HUB_TOKEN }}"
      
      # Add Helm repository
      - name: Add Helm repository
        run: |
          helm repo add ${{ vars.HELM_REPO_NAME }} ${{ vars.HELM_REPO_URL }}

      # Update Helm repo to ensure the latest index is used
      - name: Update Helm repository
        run: helm repo update

      # Deploy Helm chart
      - name: Deploy Helm chart
        run: |
          helm upgrade --install ${{ env.REPO_NAME }} ${{ vars.HELM_REPO_NAME }}/${{ env.REPO_NAME }} --version ${{ github.run_number }}


